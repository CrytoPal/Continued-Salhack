package me.ionar.salhack.module.exploit;

import io.github.racoondog.norbit.EventHandler;
import me.ionar.salhack.events.network.PacketEvent;
import me.ionar.salhack.module.Module;
import me.ionar.salhack.module.Value;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerInteractItemC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.util.Hand;

public class Bowbomb extends Module {
    public final Value<Boolean> bows = new Value<>("Bows", new String[]{"Bows"}, "Bow arrow acceleration", true);
    public final Value<Boolean> pearls = new Value<>("Pearls", new String[]{"Pearls"}, "Pearls acceleration", true);
    public final Value<Boolean> eggs = new Value<>("Eggs", new String[]{"Eggs"}, "Eggs acceleration", true);
    public final Value<Boolean> snowballs = new Value<>("Snowballs", new String[]{"Snowballs"}, "Snowballs acceleration", true);
    public final Value<Boolean> trident = new Value<>("Trident", new String[]{"Trident"}, "Trident acceleration", true);
    public final Value<Integer> timeout = new Value<>("Timeout", new String[]{"Timeout"}, "Timeout", 5000, 100, 20000, 100);
    public final Value<Integer> spoofs = new Value<>("Spoofs", new String[]{"Spoofs"}, "Spoofs", 100, 1, 300, 1);
    public final Value<Boolean> bypass = new Value<>("Bypass", new String[]{"Bypass"}, "Allow bypass some servers", false);
    private static long lastShootTime;

    public Bowbomb() {
        super("Bowbomb", new String[]{ "BS" }, "Alow shot players with bow", 0, 0xF2190E, ModuleType.EXPLOIT);
    }

    @EventHandler
    private void onPacketSend(PacketEvent.Send event) {
        if (!event.isPre()) return;
        if (mc.player == null) return;
        if (event.getPacket() instanceof PlayerActionC2SPacket packet) {
            if (packet.getAction() == PlayerActionC2SPacket.Action.RELEASE_USE_ITEM) {
                ItemStack handStack = mc.player.getMainHandStack();
                if (!handStack.isEmpty() && handStack.getItem() != null && handStack.getItem() == Items.BOW && bows.getValue()) doSpoofs();
                else if (handStack.getItem() == Items.TRIDENT && trident.getValue()) doSpoofs();
            }
        } else if (event.getPacket() instanceof PlayerInteractItemC2SPacket packet2) {
            if (packet2.getHand() == Hand.MAIN_HAND) {
                ItemStack handStack = mc.player.getMainHandStack();
                if (!handStack.isEmpty() && handStack.getItem() != null) {
                    if (handStack.getItem() == Items.EGG && eggs.getValue()) doSpoofs();
                    else if (handStack.getItem() == Items.ENDER_PEARL && pearls.getValue()) doSpoofs();
                    else if (handStack.getItem() == Items.SNOWBALL && snowballs.getValue()) doSpoofs();
                }
            }
        }
    }

    private void doSpoofs() {
        if (mc.player == null) return;
        if (System.currentTimeMillis() - lastShootTime >= timeout.getValue()) {
            lastShootTime = System.currentTimeMillis();
            mc.player.networkHandler.sendPacket(new ClientCommandC2SPacket(mc.player, ClientCommandC2SPacket.Mode.START_SPRINTING));
            for (int index = 0; index < spoofs.getValue(); ++index) {
                if (bypass.getValue()) {
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 1e-10, mc.player.getZ(), false));
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() - 1e-10, mc.player.getZ(), true));
                } else {
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() - 1e-10, mc.player.getZ(), true));
                    mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 1e-10, mc.player.getZ(), false));
                }
            }
            sendMessage("spoof");
        }
    }
}
